								设计模式
一、前言

设计模式三大基本原则
1、单一职责原则
	一个类只实现一种特定功能
2、开放封闭原则
	需要后期维护的时候，单个类封闭，在类外开放，创建新的类
3、依赖倒转原则
	3.1、高层模块不应该依赖低层模块，两个都应该依赖抽象
		高层模块：应用程序；低层模块：调用的API；抽象：抽象类
	3.2、抽象不应该依赖细节，细节应该依赖抽象
		细节：纯虚函数的多态,满足里氏替换规则
	四层：高层模块-》抽象类-》子类-》低层模块

二、创建型模式

1、简单工厂模式
2、工厂模式
3、抽象工厂模式
4、单例模式 {
	某一个类只能实例化出一个对象
	典型应用：任务队列
	把全局变量封装到类内进行私有化，外部提供访问接口，防止恶意篡改
	//饿汉模式：定义类的时候创建单例对象，线程安全，多线程下使用
	//懒汉模式：什么时候需要单例对象，在使用的时候再去创建对应的实例，线程不安全，单线程下使用
};
5、生成器/建造者模式
6、原型模式

三、结构性模式

1、适配器模式
2、桥接模式
3、组合模式
4、装饰模式
5、外观模式
6、享元模式
7、代理模式

四、行为模式

1、责任链模式
2、命令模式
3、迭代器模式
4、中介者模式
5、备忘录模式
6、观察者模式
7、策略模式
8、状态模式
9、模板方法模式
10、访问者模式
11、解释器模式