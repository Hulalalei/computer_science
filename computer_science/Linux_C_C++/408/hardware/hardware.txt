						第一章、计算机系统概述



# 计算机硬件基本组成：中央处理器，存储器，外部设备和设备控制器，总线

# 个人计算机由主机和外设组成，主机中包含多个电路板，每个电路板上有十几个集成电路组成，每个集成电路中有十几个模块，每个模块中有上千万个单元，每个单元由门电路组成

# 计算机软件：应用软件，系统软件(os，编译器，数据库管理系统，磁盘碎片整理程序，备份软件)

# 计算机系统抽象层次：
硬件(电子工程师(器件、电路)，架构师(功能部件/RTL、微体系结构))
软件(程序员(os/虚拟机、编程、算法)，最终用户(应用问题))
硬件软件之间的接口：架构师(指令集体系结构ISA)

# 翻译程序类型：
1、汇编程序：也称汇编器，用来将汇编语言源程序翻译成机器语言目标程序
2、解释程序：也称解释器，用来将源程序中的语句按其执行顺序逐条翻译成机器指令并立即执行
3、编译程序：也称编译器，用来将高级语言源程序翻译成汇编语言或机器语言目标程序

# 指令执行过程中所包含的所有操作都具有先后顺序关系，因此需要定时信号进行定时、同步

# CPU、主存和IO模块通过总线互连

# CPU包含：
1、运算器(ALU，通用寄存器组(GPRs)，累加器ACC，乘商寄存器MQ，操作数寄存器X，变址寄存器IX，基址寄存器BR，程序状态寄存器PSW)
2、控制器(PC，IR，控制单元CU)、3、MDR(位数由存储字长决定)，MAR(位数由地址码长度决定)

# 冯・诺依曼机的基本工作方式：控制流驱动方式；工作方式基本特点：按地址访问并顺序执行指令

# 计算机位数：一次可以处理多少位的数据

# 系列机：是由同一厂家生产的具有相同系统结构的一系列不同型号的计算机

# 相联存储器CAM：一种不根据地址而是根据存储内容来进行存取的存储器，可以实现快速地查找快表，即可以按照地址寻址也可以按照内容寻址

# 寄存器由触发器构成

# os的命令和指令不是一回事

# 位数与机器字长相同的是：运算器中的寄存器

# 指令周期：取出一条指令并执行这条指令的时间





						第二章、数据的机器级表示


# 补码用来表示带符号整数
   原码用来表示无符号整数

# 真值：这种带"+-"符号的数称为真值，真值是机器数所代表的实际值

# 机器数：把符号数字化的数称为机器数

# 补码，原码相互转换：若为负数，符号位不变，其余位取反，末尾加1
若为正数，原码和补码相同

# 反码，原码相互转换：若为负数，符号位不变，其余位取反

# 若用取模运算得补码，则补码＝2^M - |x|，x为真值，最后化为无符号二进制作为补码

# 移码用来表示浮点数的阶码，在真值X上加一个偏置值，通常取2^n(机器字长为n+1)

# 同一个数的补码和移码表示，其数值部分相同，而符号相反





						第三章、运算方法和运算部件


# 算术补码移位规则：负数右移添1，负数左移添0

# 算术移位：符号位不变，其余移动；
    逻辑移位：视为无符号数，直接移动

# 加数X，Y，进位C，本位和F
进位传递函数P，进位生成函数G
溢出标志OF，符号标志(和的符号)SF，零标志ZF，进位/借位标志CF

# SF对于无符号数无意义
   CF对于带符号数无意义
   OF对于无符号数无意义

#补码加减运算溢出判断方法：
单符号位
双符号位(也称为模4补码)：
S1S2为00表示结果为正数，无溢出
S1S2为01表示结果正溢出
S1S2为10表示结果负溢出
S1S2为11表示结果为负数，无溢出
模4补码存储时只需要一个符号位，只在ALU中采用双符号位

# 原码乘法：
1、确定乘积的符号位
2、计算乘积的数值位

# 补码一位乘法：符号位和数值位一块算
   补码两位乘法：把乘数分为两位一组，根据两位代码的组合决定加或减被乘数的倍数，形成的部分积每次右移两位

# 补码加减法：
1、sub为0：减法，sub为1：加法；sub控制多路选择器，作为进位传到ALU
2、符号位和数值位一起参与运算
3、[A + B]补 ＝ [A]补 + [B]补
[A - B]补 ＝ [A]补 + [-B]补

# 大端方式，小端方式
存放立即数时，先存放低位值，再存放高位值

# 由[x]补求[-x]补：连同符号一起变反，末位加1

# unsigned int和int占用字节数一样
short同理

# 数据类型转换规律：char->int->long->double

# 基数：作为进制的数

# 浮点数的IEEE标准对尾数编码采用原码，阶数采用移码

# 尾数中会隐含整数部分的1，加上后有24位

# 尾数为补码的规格化表示是小数点后一位与符号位不同
   尾数为原码的规格化表示是小数点后2位(基数为4，用2位表示)不全为0的小数

# 舍入是浮点数的概念，定点数没有舍入的概念；浮点数舍入的情况有两种：对阶、右规格化

# 阶码全为1是，指数上溢；阶码全为0，指数下溢

# IEEE 754单精度浮点数：符号位1位，阶码E有8位(1～254)，尾数23位(隐含一位)






						第四章、存储器层次结构


# 直接存取，存取信息时，通常先寻找整个存储器中的某个小区域(如磁盘上的磁道)，再在小区域内顺序查找

# SRAM芯片：静态存储元件(双稳态电路的状态存储01，集成度低，成本高，功耗大，速度快，不采用地址复用)
   DRAM芯片：动态存储元件(电容存储01，集成度高，成本低，容量大，功耗低，速度慢，采用地址复用，有行/列选通信号，读写控制信号)
   SDRAM芯片：同步DRAM
   EPROM：可擦除可编程只读存储器
   CD-ROM：光盘

# Cache主存系统的效率e＝访问Cache的时间 / 平均访存时间

# 存储器芯片组成：存储体、地址译码器、驱动器、IO控制电路、片选控制信号CS、读写控制信号WE

# 死时间/访存死区：停止对存储器的读写操作的时间段

# 随机存取与随机存取存储器不同，只读存储器也是随机存取的；因此支持随机存取的存储器并不一定是RAM

# 四体交叉存取冲突：若给定的访存地址在相邻的4次访问中出现在同一个Bank中，就会发生访存冲突，发生冲突后，后面一个等待，直到前面的结束

# 数据字：低位交叉存取，模块中的单元 





						第五章、指令系统
# 定长操作码编码：
RR型：两个操作数和结果都在寄存器中

RX型：寄存器-存储器型，二地址指令，第一个操作数在R1，另一个在存储器

RS型：寄存器-存储器型，三地址指令，R1存放结果，R3存放一个源操作数，另一个源操作数有效地址：EA=(B)+D

SI型：存储器-立即数型，结果和其中一个源操作数地址共用一个存储单元

SS型：存储器-存储器型，两个操作数都是存储器中的内容

# RISC普遍采用硬布线控制器(有限状态机)

# 控制器组成：程序计数器PC，指令寄存器IR，存储器地址寄存器MAR，存储器数据寄存器MDR，指令译码器，时序电路，微操作信号发生器

# 时钟周期：计算机操作的最小时间单位，由计算机主频确定，是主频的倒数
   工作脉冲：控制器的最小时间单位，起定时触发作用，一个时钟周期有一个工作脉冲
   指令周期：由多个CPU周期(机器周期)组成
   CPU周期：包含若干时钟周期，指令执行中每步操作所需要的时间，或通过一次总线事务访问一次主存或IO的时间定为一个机器周期(存取周期)

# 微程序控制存储器属于CPU的一部分

# 微指令确定下条指令的方法：断定法(下地址字段法)

# 控制存储器CM/CS用ROM

#寄存器间接寻址：找的是操作数在主存中的位置

# 微指令寄存器和指令寄存器对程序员透明

# 指令周期包含：取指周期，间址周期，执行周期，中断周期
T0～T2为节拍

# 中断(外中断)：当前指令执行后进行检测
# 异常(内中断)：故障，陷阱，终止，当前指令执行过程中进行检测看美女，  

# 动态流水线：在同一时间内，当某些段正在实现某种运算时，另一些段却正在进行另一种运算

# 超标量流水线：通过内置多条流水线来同时执行多个处理器，一条指令分为多段指令由不同电路单元完成

# 突发传输：同一行中，相邻的存储单元连续进行数据传输的方式，连续传输的周期数就是突发长度




						第六章、IO系统
# IO端口：指IO接口中用于缓冲信息的寄存器

# 常用的IO方式：程序查询、程序中断、DMA、通道

# 程序查询：信息交换的控制完全由CPU执行程序实现，程序查询方式接口中设置一个数据缓冲寄存器(数据端口)和一个设备状态寄存器(状态端口)

# 程序中断：每传输一个字便进行中断处理
	中断请求：由中断源发出请求，每个中断源有对应的中断请求标记触发器，组成中断请求标记寄存器，可集中在CPU中，也可分散在各个中断源中
	中断响应判优(硬件排队器实现)：多个中断源同时请求时，进行判优；
	========优先级：不可屏蔽中断 > 内部异常 > 可屏蔽中断
			内部异常中：硬件故障 > 软件故障
			DMA中断请求优先于IO设备传送的中断请求
			IO传送中：高速设备优先于低速设备，输入设备优先于输出设备，实时设备优先于普通设备
	CPU响应中断的条件：CPU每次响应IO中断的时间是在每条指令执行阶段的结束时刻
	中断响应过程：CPU响应中断后，经过硬件实现某些操作(中断隐指令)，转去执行中断服务程序
		过程：
			1、中断隐指令：关中断、保存断点、中断服务程序寻址；
			2、中断程序(内核态)完成：保存现场和屏蔽字、开中断、执行中断服务程序、关中断、恢复现场和屏蔽字、开中断、中断返回
	中断向量：存储的是中断程序的入口地址
	
	不可屏蔽中断即使在关中断情况下也会被响应

# DMA：
	DMA控制器/接口：对数据传送过程进行控制的硬件
	原理：当IO需要数据传送时，通过DMA控制器向CPU提出DMA请求，CPU响应后让出系统总线，由DMA控制器接管总线进行数据传送
	
# CPU和DMA请求总线使用权：
	1、停止CPU访存
	2、周期挪用(周期窃取)：每个机器周期/存取周期，进行DMA请求
	3、DMA与CPU交替访存：CPU周期分为两段，前段DMA访存，后段CPU访存

# DMA优先于CPU：因为如果数据没有及时接收，会造成数据丢失

# 外设准备数据的时间应大于等于中断处理时间

# IO接口中的32位数据缓冲寄存器，每准备好32位数据，DMA控制器的总线使用权就发出一次总线请求

# 当DMA请求和中断同时发生时，优先响应DMA请求

# 磁盘访问时间：寻道时间 + 延迟时间(磁盘转半圈所需要的时间) + 传输时间(划过一个扇区的时间)
