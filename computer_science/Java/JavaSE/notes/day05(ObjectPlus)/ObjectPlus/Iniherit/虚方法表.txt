虚方法表由来：
多重继承过于复杂，代码运行效率非常低，虚拟机从最顶级的父类开始设立一个虚方法表
(可能经常会用到的方法放进来)

虚方法类型：
非private、非static、非final只要满足以上三个条件的方法就叫做虚方法

子类虚方法表：
父类的各个子类也会在父类基础上添加虚方法，得到其自己的虚方法表
只有父类中的虚方法才能被子类继承
子类调用父类函数时，只需要在虚方法表中调用即可，非虚方法只能一层一层往上调用

虚方法表在继承中的应用：
当父类的方法不能满足子类现在的需求时，需要进行方法重写，在虚方法表继承中，如果子类出现了和父类
一样的虚方法，则子类重写的虚方法会覆盖父类的虚方法 